function [stepsNumof, qTable] = qLearningEpisode(qTable)
    global goalState;
    global transitionModel;
    global rewardModel;
    

    % Loop until the goal state is reached
    s = rndStartState();
    stepsNumof = 1;
    while s ~= goalState
        a = qLearningSelectAction(qTable,s);
        r = rewardMcCallum(s,a);
        ns = transitionMcCallum(s,a);
        qTable = qTableUpdate(qTable,s,a,r,ns,1);
        stepsNumof = stepsNumof + 1;
        transitionModel(s,a,1) = ns;
        rewardModel(s,a,1) = r;
        for i = 1: 2
            modelState = modelSelectState(transitionModel(:,:,1));
            modelAction = modelSelectAction(transitionModel(:,:,1), modelState);
            transitionModel(s,a,2) = transitionModel(s,a,2) + 1;
            modelNewState = transitionModel(modelState,modelAction,1);
            modelReward = rewardModel(s,a);
            qTable = qTableUpdate(qTable, modelState, modelAction, modelReward, modelNewState, transitionModel(s,a,2));    
        end
        s = ns;
    end
end
